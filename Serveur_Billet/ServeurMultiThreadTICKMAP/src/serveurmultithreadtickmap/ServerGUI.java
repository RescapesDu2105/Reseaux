/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package serveurmultithreadtickmap;

import java.io.IOException;
import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import requetepoolthreads.ConsoleServeur;

/**
 *
 * @author Doublon
 */
public class ServerGUI extends javax.swing.JFrame implements ConsoleServeur
{
    private static String keyStorePath = System.getProperty("user.dir")+ System.getProperty("file.separator")+"keystore"+System.getProperty("file.separator")+"ServeurKeyStore.jks";
    private static String aliasKeyStrore="serveurprivatekey";
    
    private boolean Started = false;
    private int Port_Billet;
    private int Max_Clients;
    private Serveur Server = null;

    /**
     * Creates new form ServerGUI
     */
    public ServerGUI()
    {
        initComponents();
        setLocationRelativeTo(null); 
        setServer(new Serveur(this));
        this.jButtonStartActionPerformed(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jButtonStart = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableauEvenements = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonStart.setText("Start");
        jButtonStart.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonStartActionPerformed(evt);
            }
        });

        TableauEvenements.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Origine", "Requête", "Thread"
            }
        ));
        jScrollPane1.setViewportView(TableauEvenements);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(230, 230, 230)
                .addComponent(jButtonStart, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonStart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonStartActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonStartActionPerformed
    {//GEN-HEADEREND:event_jButtonStartActionPerformed
        if (!isStarted()) 
        {
            try 
            {                
                TraceEvenements("Serveur#Initialisation#Start");
                getServer().Init();
            } 
            catch (IOException ex) 
            {
                System.err.println("Erreur de port d'écoute ! [" + ex + "]");
                System.exit(1);
            }
            
            setStarted(true);
            jButtonStart.setText("Stop");
        }
        else 
        {   
            getServer().Stop();             
            TraceEvenements("Serveur#Arrêt du serveur#Stop");
            //getTs_CheckIN().interrupt();
            setStarted(false);
            jButtonStart.setText("Start");
        }
    }//GEN-LAST:event_jButtonStartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(ServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(ServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(ServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(ServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new ServerGUI().setVisible(true);
            }
        });
    }
    
    public void TraceEvenements(String log) 
    {
        ArrayList<String> Ligne = new ArrayList<>();
        StringTokenizer parser = new StringTokenizer(log, "#");

        while(parser.hasMoreTokens()){ 
            String Token = parser.nextToken();
            if (Token != null)
                Ligne.add(Token);  
        }

        DefaultTableModel dtm = (DefaultTableModel) TableauEvenements.getModel();        
        dtm.insertRow(dtm.getRowCount(), Ligne.toArray());

        TableauEvenements.setModel(dtm);
    }
    
    public boolean isStarted()
    {
        return Started;
    }

    public void setStarted(boolean Started)
    {
        this.Started = Started;
    }

    public int getPort_Billet()
    {
        return Port_Billet;
    }

    public void setPort_Billet(int Port_Billet)
    {
        this.Port_Billet = Port_Billet;
    }

    public int getMax_Clients()
    {
        return Max_Clients;
    }

    public void setMax_Clients(int Max_Clients)
    {
        this.Max_Clients = Max_Clients;
    }

    public Serveur getServer()
    {
        return Server;
    }

    public void setServer(Serveur Server)
    {
        this.Server = Server;
    }

    public JTable getTableauEvenements()
    {
        return TableauEvenements;
    }

    public void setTableauEvenements(JTable TableauEvenements)
    {
        this.TableauEvenements = TableauEvenements;
    }

    public JButton getjButtonStart()
    {
        return jButtonStart;
    }

    public void setjButtonStart(JButton jButtonStart)
    {
        this.jButtonStart = jButtonStart;
    }

    public JScrollPane getjScrollPane1()
    {
        return jScrollPane1;
    }

    public void setjScrollPane1(JScrollPane jScrollPane1)
    {
        this.jScrollPane1 = jScrollPane1;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableauEvenements;
    private javax.swing.JButton jButtonStart;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
