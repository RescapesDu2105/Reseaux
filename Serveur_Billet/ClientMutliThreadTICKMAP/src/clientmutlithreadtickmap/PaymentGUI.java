/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clientmutlithreadtickmap;

import cryptographie.CleSecrete;
import cryptographie.ClientBD;
import cryptographie.HMACUtils;
import java.io.IOException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.SecretKey;
import javax.swing.JLabel;
import protocoleTICKMAP.ReponseTICKMAP;
import protocoleTICKMAP.RequeteTICKMAP;
import static protocoleTICKMAP.RequeteTICKMAP.REQUEST_PAYMENT_REGISTRATION;

/**
 *
 * @author Doublon
 */
public class PaymentGUI extends javax.swing.JFrame
{
    private static String keySecretHmac = "CleSecreteHMACClient.ser";
    private static String keyStoreDirPath = System.getProperty("user.dir")+ System.getProperty("file.separator")+"keystore"+System.getProperty("file.separator");
    
    private int montant ;
    private Client client;
    private ClientBD clientBD;
    private CleSecrete cleSecr;
    private SecretKey cleHMAC;
    
    /**
     * Creates new form PaymentGUI
     */
    public PaymentGUI(Client cli ,int mont , ClientBD clibd)
    {
        initComponents();
        setLocationRelativeTo(null); 
        setClient(cli);
        setClientBD(clibd);
        jLabelMontant.setText(Integer.toString(mont)+"€");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabelMontant = new javax.swing.JLabel();
        jLabelTitre = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelMontant.setHorizontalAlignment(JLabel.CENTER);
        jLabelMontant.setVerticalAlignment(JLabel.CENTER);
        jLabelMontant.setBackground(new java.awt.Color(0, 0, 0));
        jLabelMontant.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelMontant.setForeground(new java.awt.Color(204, 0, 0));
        jLabelMontant.addAncestorListener(new javax.swing.event.AncestorListener()
        {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt)
            {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt)
            {
                jLabelMontantAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt)
            {
            }
        });

        jLabelTitre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelTitre.setText("Montant a Payé :");

        jButton1.setText("Passer au Payement");

        jButton2.setText("Annuler");
        jButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelTitre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelMontant, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(56, 56, 56))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTitre)
                .addGap(12, 12, 12)
                .addComponent(jLabelMontant, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
    {//GEN-HEADEREND:event_jButton2ActionPerformed
        getClient().Deconnexion();
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jLabelMontantAncestorAdded(javax.swing.event.AncestorEvent evt)//GEN-FIRST:event_jLabelMontantAncestorAdded
    {//GEN-HEADEREND:event_jLabelMontantAncestorAdded
        RequeteTICKMAP Req = new RequeteTICKMAP(RequeteTICKMAP.REQUEST_PAYMENT_REGISTRATION);
        ReponseTICKMAP Rep = null;
        
        LoadKeyHmac(keyStoreDirPath , keySecretHmac);
        byte[] message = "Payment".getBytes();
        
        try
        {
            HMACUtils hmac = new HMACUtils(getCleHMAC());
            byte[] messageHmac = hmac.DoHmac(message);
            
            Req.getChargeUtile().put("message" , message);
            Req.getChargeUtile().put("messageHmac" , messageHmac);
            Req.getChargeUtile().put("ClientBD", getClientBD());
            getClient().EnvoyerRequete(Req);
            
            Rep = getClient().RecevoirReponse();
            
            if(Rep.getCode() == ReponseTICKMAP.REQUEST_PAYMENT_REGISTRATION_OK)
            {
                System.out.println("ok!");
            }
        } catch (NoSuchAlgorithmException ex)
        {
            Logger.getLogger(PaymentGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchProviderException ex)
        {
            Logger.getLogger(PaymentGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvalidKeyException ex)
        {
            Logger.getLogger(PaymentGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabelMontantAncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(PaymentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(PaymentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(PaymentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(PaymentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new PaymentGUI(null,0,null).setVisible(true);
            }
        });
    }

    public int getMontant()
    {
        return montant;
    }

    public void setMontant(int montant)
    {
        this.montant = montant;
    }

    public Client getClient()
    {
        return client;
    }

    public void setClient(Client client)
    {
        this.client = client;
    }

    public CleSecrete getCleSecr()
    {
        return cleSecr;
    }

    public void setCleSecr(CleSecrete cleSecr)
    {
        this.cleSecr = cleSecr;
    }

    public SecretKey getCleHMAC()
    {
        return cleHMAC;
    }

    public void setCleHMAC(SecretKey cleHMAC)
    {
        this.cleHMAC = cleHMAC;
    }

    public ClientBD getClientBD()
    {
        return clientBD;
    }

    public void setClientBD(ClientBD clientBD)
    {
        this.clientBD = clientBD;
    }
    
    
    
    public void LoadKeyHmac(String dirPath , String filePath)
    {
        try
        {
            cleSecr=new CleSecrete();
            setCleHMAC(cleSecr.LoadCle(dirPath, filePath));
        } catch (NoSuchAlgorithmException ex)
        {
            Logger.getLogger(AuthentificationGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchProviderException ex)
        {
            Logger.getLogger(AuthentificationGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex)
        {
            Logger.getLogger(AuthentificationGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex)
        {
            Logger.getLogger(PaymentGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabelMontant;
    private javax.swing.JLabel jLabelTitre;
    // End of variables declaration//GEN-END:variables
}
