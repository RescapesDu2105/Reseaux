/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clientmutlithreadtickmap;

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import protocoleTICKMAP.ReponseTICKMAP;
import protocoleTICKMAP.RequeteTICKMAP;
import static protocoleTICKMAP.RequeteTICKMAP.REQUEST_SEND_LIST_OF_FLY;

/**
 *
 * @author Doublon
 */
public class ListeVolsGUI extends javax.swing.JFrame
{
    private final Client client;

    /**
     * Creates new form ListeVolsGUI
     */
    public ListeVolsGUI(Client c)
    {
        client=c;
        initComponents();
        RequeteListeVols();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableVols = new javax.swing.JTable();
        jLabelTitre = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableVols.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "NumeroVol", "Destination", "Heure de Depart", "Place(s) restante(s)"
            }
        ));
        jScrollPane1.setViewportView(jTableVols);

        jLabelTitre.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabelTitre.setText("LISTE DES VOLS");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(jLabelTitre)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelTitre)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(ListeVolsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(ListeVolsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(ListeVolsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(ListeVolsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new ListeVolsGUI(null).setVisible(true);
            }
        });
    }
    
    public void RequeteListeVols()
    {
        RequeteTICKMAP Req = new RequeteTICKMAP(RequeteTICKMAP.REQUEST_SEND_LIST_OF_FLY);
        ArrayList<HashMap<String, Object>> Vols = new ArrayList<>();
        
        DefaultTableModel dtm = (DefaultTableModel) jTableVols.getModel();
        
        getClient().EnvoyerRequete(Req);       
        ReponseTICKMAP Rep = getClient().RecevoirReponse();
        
        if (Rep != null)
        {
            if (Rep.getCode() == ReponseTICKMAP.LIST_OF_FLY_OK)
            {
                HashMap<String, Object> RepVols = Rep.getChargeUtile();
                Object[] ligne = new Object[4];

                for (int Cpt = 1 ; Cpt <= RepVols.size() - 1 ; Cpt++) 
                {
                    Vols.add((HashMap<String, Object>) RepVols.get(Integer.toString(Cpt)));
                    HashMap<String, Object> Vol = Vols.get(Cpt - 1);
                    
                    ligne[0] = Vol.get("NumeroVol");
                    ligne[1] = Vol.get("Destination");
                    Timestamp DateHeureDepart = (Timestamp) Vol.get("DateHeureDepart");
                    ligne[2] = DateHeureDepart.toLocalDateTime().toLocalTime(); 
                    ligne[3] = Vol.get("PlacesRestantes");
                    dtm.insertRow(Cpt - 1, ligne);
                }       
            }
            else
            {
                JOptionPane.showMessageDialog(this, Rep.getChargeUtile().get("Message"), "Impossible de charger les vols !", JOptionPane.ERROR_MESSAGE);
                System.exit(1);
            } 
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Le serveur s'est déconnecté !", "Erreur", JOptionPane.ERROR_MESSAGE);
        }        
       
    }

    public Client getClient()
    {
        return client;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelTitre;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableVols;
    // End of variables declaration//GEN-END:variables
}
